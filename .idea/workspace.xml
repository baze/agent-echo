<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="41cd959d-8cf2-4c22-9ae8-3014fa29b27a" name="Default" comment="">
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/index.js" afterPath="$PROJECT_DIR$/index.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/package.json" afterPath="$PROJECT_DIR$/package.json" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="index.js" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/index.js">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="376">
              <caret line="27" column="43" lean-forward="true" selection-start-line="27" selection-start-column="43" selection-end-line="27" selection-end-column="43" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="package.json" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/package.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="546">
              <caret line="21" column="25" lean-forward="false" selection-start-line="21" selection-start-column="25" selection-end-line="21" selection-end-column="25" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>getusers</find>
      <find>context</find>
      <find>nicht in der</find>
      <find>ERROR</find>
      <find>nl2br</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/userinfo.js" />
        <option value="$PROJECT_DIR$/functions.js" />
        <option value="$PROJECT_DIR$/users.json" />
        <option value="$PROJECT_DIR$/alexa.js" />
        <option value="$PROJECT_DIR$/rest-service.js" />
        <option value="$PROJECT_DIR$/helga.js" />
        <option value="$PROJECT_DIR$/tmp.json" />
        <option value="$PROJECT_DIR$/index.js" />
        <option value="$PROJECT_DIR$/package.json" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER">
    <package-json value="$PROJECT_DIR$/package.json" />
  </component>
  <component name="JsFlowSettings">
    <service-enabled>true</service-enabled>
    <exe-path />
    <annotation-enable>false</annotation-enable>
    <other-services-enabled>true</other-services-enabled>
    <auto-save>true</auto-save>
  </component>
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="PackageJsonUpdateNotifier">
    <dismissed value="$PROJECT_DIR$/package.json" />
  </component>
  <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
  <component name="ProjectFrameBounds">
    <option name="x" value="496" />
    <option name="y" value="72" />
    <option name="width" value="1826" />
    <option name="height" value="1178" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>AngularJS</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="agent-echo" type="b2602c69:ProjectViewProjectNode" />
              <item name="agent-echo" type="2a2b976b:PhpTreeStructureProvider$1" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scratches" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="Settings.JavaScript" />
    <property name="WebServerToolWindowFactoryState" value="true" />
    <property name="nodejs_interpreter_path" value="/usr/local/bin/node" />
    <property name="JavaScriptPreferStrict" value="false" />
    <property name="JavaScriptWeakerCompletionTypeGuess" value="true" />
  </component>
  <component name="RestClientSettings">
    <option name="REQUEST_HISTORY">
      <list>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;cfbd759c-80a4-47b2-8418-424e9c476d9a&quot;,   &quot;timestamp&quot;: &quot;2017-07-13T08:03:25.872Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;ja&quot;,     &quot;action&quot;: &quot;blog.read&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;euw&quot;,       &quot;confirmation&quot;: &quot;yes&quot;,       &quot;post_id&quot;: &quot;5519.0&quot;     },     &quot;contexts&quot;: [],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;2f3e8350-aaf2-43ed-a75d-941cc98404cd&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 1025,       &quot;intentName&quot;: &quot;blog.read - answer yes&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich lese den Post vor&quot;,       &quot;source&quot;: &quot;helga&quot;,       &quot;displayText&quot;: &quot;Ich lese den Post vor&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich lese den Post vor&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;3b760316-726e-4549-9144-e9157ee447b5&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;cfbd759c-80a4-47b2-8418-424e9c476d9a&quot;,   &quot;timestamp&quot;: &quot;2017-07-13T08:03:25.872Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;ja&quot;,     &quot;action&quot;: &quot;blog.read&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;euw&quot;,       &quot;confirmation&quot;: &quot;yes&quot;,       &quot;post_id&quot;: &quot;5519.0&quot;     },     &quot;contexts&quot;: [],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;2f3e8350-aaf2-43ed-a75d-941cc98404cd&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 1025,       &quot;intentName&quot;: &quot;blog.read - answer yes&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich lese den Post vor&quot;,       &quot;source&quot;: &quot;helga&quot;,       &quot;displayText&quot;: &quot;Ich lese den Post vor&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich lese den Post vor&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;3b760316-726e-4549-9144-e9157ee447b5&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;4f79876f-8478-4cad-ae5e-56ec4e7dddeb&quot;,   &quot;timestamp&quot;: &quot;2017-07-13T08:01:40.212Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibts neues bei euw?&quot;,     &quot;action&quot;: &quot;blog.latest&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;euw&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;blog&quot;,         &quot;parameters&quot;: {           &quot;blog.original&quot;: &quot;euw&quot;,           &quot;blog&quot;: &quot;euw&quot;         },         &quot;lifespan&quot;: 1       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;c07a76e2-c963-412a-b62d-d735cef982a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 1367,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich konnte keine Beiträge finden&quot;,       &quot;source&quot;: &quot;helga&quot;,       &quot;displayText&quot;: &quot;Ich konnte keine Beiträge finden&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich konnte keine Beiträge finden&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;3b760316-726e-4549-9144-e9157ee447b5&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;dbafeabc-a7f8-4bcc-bfe3-830642779d10&quot;,   &quot;timestamp&quot;: &quot;2017-07-13T07:42:15.93Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibts neues bei euw?&quot;,     &quot;action&quot;: &quot;blog.latest&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;euw&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;blog&quot;,         &quot;parameters&quot;: {           &quot;blog.original&quot;: &quot;euw&quot;,           &quot;blog&quot;: &quot;euw&quot;         },         &quot;lifespan&quot;: 1       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;c07a76e2-c963-412a-b62d-d735cef982a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;3b760316-726e-4549-9144-e9157ee447b5&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;dbafeabc-a7f8-4bcc-bfe3-830642779d10&quot;,   &quot;timestamp&quot;: &quot;2017-07-13T07:42:15.93Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibts neues bei euw?&quot;,     &quot;action&quot;: &quot;blog.latest&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;euw&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;blog&quot;,         &quot;parameters&quot;: {           &quot;blog.original&quot;: &quot;euw&quot;,           &quot;blog&quot;: &quot;euw&quot;         },         &quot;lifespan&quot;: 1       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;c07a76e2-c963-412a-b62d-d735cef982a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;3b760316-726e-4549-9144-e9157ee447b5&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.1532c79b-6495-4608-8a31-5e20012feda5&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: false   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.d971d443-bc51-4abb-9b68-5b514598c1c8&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T15:02:11Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;DefaultWelcomeIntent&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Host" />
                <option name="value" value="https://flannel-poutine-21177.herokuapp.com" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Host" />
                <option name="value" value="flannel-poutine-21177.herokuapp.com" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Host" />
                <option name="value" value="https://flannel-poutine-21177.herokuapp.com/alexa" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.1532c79b-6495-4608-8a31-5e20012feda5&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: false   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.58e21372-f709-44a5-b93a-52136928689f&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T14:55:45Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;DefaultWelcomeIntent&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.1532c79b-6495-4608-8a31-5e20012feda5&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: true   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.567e65f2-ed8f-4ceb-a643-767208575448&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T14:54:48Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;DefaultWelcomeIntent&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.1532c79b-6495-4608-8a31-5e20012feda5&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: true   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.567e65f2-ed8f-4ceb-a643-767208575448&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T14:54:48Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;DefaultWelcomeIntent&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.1532c79b-6495-4608-8a31-5e20012feda5&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: true   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.567e65f2-ed8f-4ceb-a643-767208575448&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T14:54:48Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;DefaultWelcomeIntent&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="http://192.168.1.99:8000" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;f444012d-6b77-46ef-abbd-a9ff4c5306aa&quot;,   &quot;timestamp&quot;: &quot;2017-07-06T12:59:16.01Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;ja&quot;,     &quot;action&quot;: &quot;employee.contact.email&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;confirmation&quot;: &quot;ja&quot;,       &quot;contactOption&quot;: &quot;email&quot;,       &quot;employee&quot;: &quot;nane&quot;,       &quot;subject&quot;: &quot;Test1&quot;,       &quot;text&quot;: &quot;Test2&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;subject.original&quot;: &quot;Test1&quot;,           &quot;contactOption.original&quot;: &quot;email&quot;,           &quot;subject&quot;: &quot;Test1&quot;,           &quot;contactOption&quot;: &quot;email&quot;,           &quot;employee.original&quot;: &quot;&quot;,           &quot;text&quot;: &quot;Test2&quot;,           &quot;confirmation.original&quot;: &quot;ja&quot;,           &quot;confirmation&quot;: &quot;ja&quot;,           &quot;text.original&quot;: &quot;Test2&quot;,           &quot;employee&quot;: &quot;nane&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;175fdb49-aafd-4008-8d4f-f98e4365463f&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee.contact.email&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;sende nachricht …&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;sende nachricht …&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="http://192.168.1.99:8000" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;f444012d-6b77-46ef-abbd-a9ff4c5306aa&quot;,   &quot;timestamp&quot;: &quot;2017-07-06T12:59:16.01Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;ja&quot;,     &quot;action&quot;: &quot;employee.contact.email&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;confirmation&quot;: &quot;ja&quot;,       &quot;contactOption&quot;: &quot;email&quot;,       &quot;employee&quot;: &quot;bjma&quot;,       &quot;subject&quot;: &quot;Test1&quot;,       &quot;text&quot;: &quot;Test2&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;subject.original&quot;: &quot;Test1&quot;,           &quot;contactOption.original&quot;: &quot;email&quot;,           &quot;subject&quot;: &quot;Test1&quot;,           &quot;contactOption&quot;: &quot;email&quot;,           &quot;employee.original&quot;: &quot;&quot;,           &quot;text&quot;: &quot;Test2&quot;,           &quot;confirmation.original&quot;: &quot;ja&quot;,           &quot;confirmation&quot;: &quot;ja&quot;,           &quot;text.original&quot;: &quot;Test2&quot;,           &quot;employee&quot;: &quot;bjma&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;175fdb49-aafd-4008-8d4f-f98e4365463f&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee.contact.email&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;sende nachricht …&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;sende nachricht …&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="http://192.168.1.99:8000" />
          <option name="urlPath" value="/mail" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="SignatureCertChainUrl" />
                <option name="value" value="https://s3.amazonaws.com/echo.api/echo-api-cert.pem" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Signature" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.86372312-f51c-475d-a30a-9d2def8fef77&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: true   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.fa13adf6-9675-41e1-a38f-ad9a0aefbb82&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T12:14:43Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;Employee&quot;,       &quot;slots&quot;: {         &quot;employeeslot&quot;: {           &quot;name&quot;: &quot;employeeslot&quot;,           &quot;value&quot;: &quot;Jan&quot;         }       }     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.d1dc8ba3-53f3-4f18-92c1-9db4de3bc5fe&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: true   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.634015f4-7393-4d6d-81bf-26ecc0d5afd9&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-06T08:46:28Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;SayHello&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://192.168.1.99:8000" />
          <option name="urlPath" value="/ews" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/ews" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;c66cd232-ac4e-4234-91c6-3eef52fb259f&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T09:40:36.236Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;welche kunden betreut er?&quot;,     &quot;action&quot;: &quot;employee.clients&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;myAction&quot;: &quot;employee.clients&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;jan&quot;,           &quot;employee&quot;: &quot;jawa&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;285584b2-61b6-497d-a1e1-73b7858f06a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee - context:userinfo - comment:clients&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://192.168.1.99:8000" />
          <option name="urlPath" value="/ews" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;c66cd232-ac4e-4234-91c6-3eef52fb259f&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T09:40:36.236Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;welche kunden betreut er?&quot;,     &quot;action&quot;: &quot;employee.clients&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;myAction&quot;: &quot;employee.clients&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;jan&quot;,           &quot;employee&quot;: &quot;jawa&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;285584b2-61b6-497d-a1e1-73b7858f06a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee - context:userinfo - comment:clients&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="http://192.168.1.99:8000" />
          <option name="urlPath" value="/ews" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;c66cd232-ac4e-4234-91c6-3eef52fb259f&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T09:40:36.236Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;welche kunden betreut er?&quot;,     &quot;action&quot;: &quot;employee.clients&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;myAction&quot;: &quot;employee.clients&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;jan&quot;,           &quot;employee&quot;: &quot;jawa&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;285584b2-61b6-497d-a1e1-73b7858f06a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee - context:userinfo - comment:clients&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/ews" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;c66cd232-ac4e-4234-91c6-3eef52fb259f&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T09:40:36.236Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;welche kunden betreut er?&quot;,     &quot;action&quot;: &quot;employee.clients&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;myAction&quot;: &quot;employee.clients&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;jan&quot;,           &quot;employee&quot;: &quot;jawa&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;285584b2-61b6-497d-a1e1-73b7858f06a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee - context:userinfo - comment:clients&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;c66cd232-ac4e-4234-91c6-3eef52fb259f&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T09:40:36.236Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;welche kunden betreut er?&quot;,     &quot;action&quot;: &quot;employee.clients&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;myAction&quot;: &quot;employee.clients&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;jan&quot;,           &quot;employee&quot;: &quot;jawa&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;285584b2-61b6-497d-a1e1-73b7858f06a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee - context:userinfo - comment:clients&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;4bcdbda3-9a0c-4b4b-82d0-4958b3655d0e&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T08:06:19.984Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibt es neues bei sul?&quot;,     &quot;action&quot;: &quot;blog.latest&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;sul&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;knowledge&quot;,         &quot;parameters&quot;: {           &quot;blog.original&quot;: &quot;sul?&quot;,           &quot;blog&quot;: &quot;sul&quot;         },         &quot;lifespan&quot;: 3       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;c07a76e2-c963-412a-b62d-d735cef982a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 1917,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Der letzte Beitrag vom 5. Juli 2017 ist: Beef Back Ribs in 7h vom Smoker&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;Der letzte Beitrag vom 5. Juli 2017 ist: Beef Back Ribs in 7h vom Smoker&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Der letzte Beitrag vom 5. Juli 2017 ist: Beef Back Ribs in 7h vom Smoker&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;631f772b-baf1-4f26-b330-1f82dfedc1d4&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T07:49:48.113Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibt es neues bei sul?&quot;,     &quot;action&quot;: &quot;getBlogPosts&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;sul&quot;     },     &quot;contexts&quot;: [],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;c07a76e2-c963-412a-b62d-d735cef982a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;631f772b-baf1-4f26-b330-1f82dfedc1d4&quot;,   &quot;timestamp&quot;: &quot;2017-07-05T07:49:48.113Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibt es neues bei sul?&quot;,     &quot;action&quot;: &quot;getBlogPosts&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;sul&quot;     },     &quot;contexts&quot;: [],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;c07a76e2-c963-412a-b62d-d735cef982a7&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich suche nach Blogeinträgen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/helga" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json;charset=UTF-8" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;sessionId&quot;: &quot;SessionId.4c0e3997-b7e4-48c8-a6b3-191f1436f50c&quot;,     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.17e64ff1-708e-432e-add3-f925579d1938&quot;     },     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.AGSAOZOK6I2SIJY5LDXO5ORFJQPZEAQ4ZUUEVU4E5666QQJPY76VPRFLA2Y6J4C6F7U6CUS5TLJ53PUTV2APDKQYWSZ575Z3FFWOBKSBEWYIKW2XKZ4PN72IZRVXNPYBWISGDFLLLIFJPKNJF3H4VFW3UEZCGK4K6F3F3Q7FK2V3KDRZZYT4JUAUYXFKYZIVR7FIIOH7U3J2PSQ&quot;     },     &quot;new&quot;: true   },   &quot;request&quot;: {     &quot;type&quot;: &quot;IntentRequest&quot;,     &quot;requestId&quot;: &quot;EdwRequestId.88a41279-c875-441e-b2ff-c6fe9eb86af4&quot;,     &quot;locale&quot;: &quot;de-DE&quot;,     &quot;timestamp&quot;: &quot;2017-07-04T14:38:56Z&quot;,     &quot;intent&quot;: {       &quot;name&quot;: &quot;DefaultWelcomeIntent&quot;,       &quot;slots&quot;: {}     }   },   &quot;version&quot;: &quot;1.0&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;session&quot;: {     &quot;new&quot;: true,     &quot;sessionId&quot;: &quot;amzn1.echo-api.session.[unique-value-here]&quot;,     &quot;attributes&quot;: {},     &quot;user&quot;: {       &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;     },     &quot;application&quot;: {       &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;     }   },   &quot;version&quot;: &quot;1.0&quot;,   &quot;request&quot;: {     &quot;locale&quot;: &quot;en-US&quot;,     &quot;timestamp&quot;: &quot;2016-10-27T18:21:44Z&quot;,     &quot;type&quot;: &quot;LaunchRequest&quot;,     &quot;requestId&quot;: &quot;amzn1.echo-api.request.[unique-value-here]&quot;   },   &quot;context&quot;: {     &quot;AudioPlayer&quot;: {       &quot;playerActivity&quot;: &quot;IDLE&quot;     },     &quot;System&quot;: {       &quot;device&quot;: {         &quot;supportedInterfaces&quot;: {           &quot;AudioPlayer&quot;: {}         }       },       &quot;application&quot;: {         &quot;applicationId&quot;: &quot;amzn1.ask.skill.[unique-value-here]&quot;       },       &quot;user&quot;: {         &quot;userId&quot;: &quot;amzn1.ask.account.[unique-value-here]&quot;       }     }   } }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;9c1854ee-6de5-4e60-9011-514121476582&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T08:32:38.795Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;Wer ist für S&amp;L zuständig?&quot;,     &quot;action&quot;: &quot;clients.employee&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;client&quot;: &quot;S&amp;L&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;client&quot;: &quot;S&amp;L&quot;,           &quot;client.original&quot;: &quot;S&amp;L&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;7bd06179-1d45-490e-8a64-9d2ba79019b1&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 553,       &quot;intentName&quot;: &quot;clients.employee&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;ich stelle das eben zusammen&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;ich stelle das eben zusammen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;ich stelle das eben zusammen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/alexa" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;9c1854ee-6de5-4e60-9011-514121476582&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T08:32:38.795Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;Wer ist für S&amp;L zuständig?&quot;,     &quot;action&quot;: &quot;clients.employee&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;client&quot;: &quot;S&amp;L&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;client&quot;: &quot;S&amp;L&quot;,           &quot;client.original&quot;: &quot;S&amp;L&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;7bd06179-1d45-490e-8a64-9d2ba79019b1&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 553,       &quot;intentName&quot;: &quot;clients.employee&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;ich stelle das eben zusammen&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;ich stelle das eben zusammen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;ich stelle das eben zusammen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;9c1854ee-6de5-4e60-9011-514121476582&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T08:32:38.795Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;Wer ist für S&amp;L zuständig?&quot;,     &quot;action&quot;: &quot;clients.employee&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;client&quot;: &quot;S&amp;L&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;client&quot;: &quot;S&amp;L&quot;,           &quot;client.original&quot;: &quot;S&amp;L&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;7bd06179-1d45-490e-8a64-9d2ba79019b1&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 553,       &quot;intentName&quot;: &quot;clients.employee&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;ich stelle das eben zusammen&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;ich stelle das eben zusammen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;ich stelle das eben zusammen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;f96097ba-d12e-4aa4-a4ca-cc8ff2f83275&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T08:17:28.764Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;Wer ist für S&amp;L zuständig?&quot;,     &quot;action&quot;: &quot;client.employee&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;client&quot;: &quot;S&amp;L&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;johanna?&quot;,           &quot;client&quot;: &quot;S&amp;L&quot;,           &quot;employee&quot;: &quot;joma&quot;,           &quot;client.original&quot;: &quot;S&amp;L&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;7bd06179-1d45-490e-8a64-9d2ba79019b1&quot;,       &quot;webhookUsed&quot;: &quot;false&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;clients.employee&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich weiß leider nicht genau, wer S&amp;L betreut&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich weiß leider nicht genau, wer S&amp;L betreut&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;19cbd9dc-a832-4d91-a39d-7f4b1b7c3bb5&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T08:13:41.879Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;wen betreut johanna?&quot;,     &quot;action&quot;: &quot;employee.clients&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;employee&quot;: &quot;joma&quot;,       &quot;myAction&quot;: &quot;employee.clients&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.clients&quot;,           &quot;employee.original&quot;: &quot;johanna?&quot;,           &quot;employee&quot;: &quot;joma&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;d3863692-8c0a-43d2-984c-933787fd8446&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;intentName&quot;: &quot;employee.clients&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;joma kümmert sich um alle gleichermaßen&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;joma kümmert sich um alle gleichermaßen&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Request timeout.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;4150d754-cf05-4761-929f-2400fad83303&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T07:47:52.44Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;wobei kann michael mir helfen?&quot;,     &quot;action&quot;: &quot;employee.services&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;employee&quot;: &quot;miro&quot;,       &quot;myAction&quot;: &quot;employee.services&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.services&quot;,           &quot;employee.original&quot;: &quot;michael&quot;,           &quot;employee&quot;: &quot;miro&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;f4913065-8063-4d3e-9c90-2789bfb1f67b&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 132,       &quot;intentName&quot;: &quot;employee.services&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Michael Roth ist zuständig für Teamleitung,Kontakt&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;Michael Roth ist zuständig für Teamleitung,Kontakt&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Michael Roth ist zuständig für Teamleitung,Kontakt&quot;         }       ]     },     &quot;score&quot;: 0.8500000238418579   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;cd10ef87-f0bf-4f10-a9b8-cec6e58bc21d&quot;,   &quot;timestamp&quot;: &quot;2017-07-04T07:43:51.452Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;wofür ist natascha zuständig?&quot;,     &quot;action&quot;: &quot;employee.services&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;employee&quot;: &quot;nane&quot;,       &quot;myAction&quot;: &quot;employee.services&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.services&quot;,           &quot;employee.original&quot;: &quot;natascha&quot;,           &quot;employee&quot;: &quot;nane&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;f4913065-8063-4d3e-9c90-2789bfb1f67b&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 2093,       &quot;intentName&quot;: &quot;employee.services&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;nane macht so dies und das&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;nane macht so dies und das&quot;         }       ]     },     &quot;score&quot;: 1   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Webhook response was empty.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;dc80e5a6-581b-44b0-ab55-8a70efa217af&quot;,   &quot;timestamp&quot;: &quot;2017-07-03T15:18:13.934Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;wie ist die email von johanna&quot;,     &quot;action&quot;: &quot;employee.email&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;employee&quot;: &quot;Frau Maier&quot;,       &quot;myAction&quot;: &quot;employee.email&quot;,       &quot;phone&quot;: &quot;&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;employee.email&quot;,           &quot;phone&quot;: &quot;&quot;,           &quot;phone.original&quot;: &quot;&quot;,           &quot;employee.original&quot;: &quot;johanna&quot;,           &quot;employee&quot;: &quot;Frau Maier&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;f0a0a932-fe89-449b-8a17-c04103f2849c&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 174,       &quot;intentName&quot;: &quot;employee.email&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Die E-Mail-Adresse von Johanna Maier ist maier@euw.de&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;Die E-Mail-Adresse von Johanna Maier ist maier@euw.de&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Die E-Mail-Adresse von Johanna Maier ist maier@euw.de&quot;         }       ]     },     &quot;score&quot;: 0.5   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;f7afa564-324d-42b3-a4a6-35e3bcc7ded5&quot;,   &quot;timestamp&quot;: &quot;2017-07-03T14:59:35.292Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;was gibts neues auf schlaadt?&quot;,     &quot;action&quot;: &quot;blog.latest&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;blog&quot;: &quot;schlaadt&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;blog.original&quot;: &quot;schlaadt&quot;,           &quot;myAction&quot;: &quot;employee.email&quot;,           &quot;phone&quot;: &quot;&quot;,           &quot;phone.original&quot;: &quot;&quot;,           &quot;employee.original&quot;: &quot;die telefonnummer&quot;,           &quot;blog&quot;: &quot;schlaadt&quot;,           &quot;employee&quot;: &quot;die telefonnummer&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 1       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;aac7e726-efba-4833-90b0-a999461e5c11&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 1722,       &quot;intentName&quot;: &quot;blog.latest&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Der letzte Beitrag war: Hallo Welt!&quot;,       &quot;source&quot;: &quot;webhook-echo-sample&quot;,       &quot;displayText&quot;: &quot;Der letzte Beitrag war: Hallo Welt!&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Der letzte Beitrag war: Hallo Welt!&quot;         }       ]     },     &quot;score&quot;: 0.8899999856948853   },   &quot;status&quot;: {     &quot;code&quot;: 200,     &quot;errorType&quot;: &quot;success&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="https://flannel-poutine-21177.herokuapp.com" />
          <option name="urlPath" value="/info" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="*/*" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Cache-Control" />
                <option name="value" value="no-cache" />
              </KeyValuePair>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;id&quot;: &quot;e5fdd2c1-3454-4cc2-92d6-53413dbfa382&quot;,   &quot;timestamp&quot;: &quot;2017-07-03T14:43:28.08Z&quot;,   &quot;lang&quot;: &quot;de&quot;,   &quot;result&quot;: {     &quot;source&quot;: &quot;agent&quot;,     &quot;resolvedQuery&quot;: &quot;wie ist die email von johanna&quot;,     &quot;action&quot;: &quot;employee.email&quot;,     &quot;actionIncomplete&quot;: false,     &quot;parameters&quot;: {       &quot;employee&quot;: &quot;Frau Maier&quot;,       &quot;myAction&quot;: &quot;getEmailAddress&quot;,       &quot;phone&quot;: &quot;&quot;     },     &quot;contexts&quot;: [       {         &quot;name&quot;: &quot;userinfo&quot;,         &quot;parameters&quot;: {           &quot;myAction&quot;: &quot;getEmailAddress&quot;,           &quot;phone&quot;: &quot;&quot;,           &quot;phone.original&quot;: &quot;&quot;,           &quot;employee.original&quot;: &quot;johanna&quot;,           &quot;employee&quot;: &quot;Frau Maier&quot;,           &quot;myAction.original&quot;: &quot;&quot;         },         &quot;lifespan&quot;: 5       }     ],     &quot;metadata&quot;: {       &quot;intentId&quot;: &quot;f0a0a932-fe89-449b-8a17-c04103f2849c&quot;,       &quot;webhookUsed&quot;: &quot;true&quot;,       &quot;webhookForSlotFillingUsed&quot;: &quot;false&quot;,       &quot;webhookResponseTime&quot;: 152,       &quot;intentName&quot;: &quot;employee.email&quot;     },     &quot;fulfillment&quot;: {       &quot;speech&quot;: &quot;Ich suche nach der E-Mail-Adresse von Frau Maier&quot;,       &quot;messages&quot;: [         {           &quot;type&quot;: 0,           &quot;speech&quot;: &quot;Ich suche nach der E-Mail-Adresse von Frau Maier&quot;         }       ]     },     &quot;score&quot;: 0.5   },   &quot;status&quot;: {     &quot;code&quot;: 206,     &quot;errorType&quot;: &quot;partial_content&quot;,     &quot;errorDetails&quot;: &quot;Webhook call failed. Error: Webhook response was empty.&quot;   },   &quot;sessionId&quot;: &quot;763d51bd-05d4-4851-9dc5-57f79f9544a7&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
      </list>
    </option>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="41cd959d-8cf2-4c22-9ae8-3014fa29b27a" name="Default" comment="" />
      <created>1499063936110</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1499063936110</updated>
      <workItem from="1499063937354" duration="1315000" />
      <workItem from="1499085945126" duration="14540000" />
      <workItem from="1499161787435" duration="1819000" />
      <workItem from="1499176047103" duration="3559000" />
      <workItem from="1499240674291" duration="1459000" />
      <workItem from="1499247972182" duration="1323000" />
      <workItem from="1499257361349" duration="3940000" />
      <workItem from="1499268653519" duration="23000" />
      <workItem from="1499268717312" duration="3000" />
      <workItem from="1499322968164" duration="1540000" />
      <workItem from="1499328138403" duration="18131000" />
      <workItem from="1499412684016" duration="4473000" />
      <workItem from="1499433314694" duration="3061000" />
      <workItem from="1499844489219" duration="1768000" />
      <workItem from="1499926466689" duration="6059000" />
      <workItem from="1499954303421" duration="6993000" />
      <workItem from="1500023184010" duration="3667000" />
      <workItem from="1500030327612" duration="1000" />
      <workItem from="1500030351390" duration="1383000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="75057000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="496" y="72" width="1826" height="1178" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Remote Host" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.29596412" sideWeight="0.47043365" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32951543" sideWeight="0.48150223" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32959446" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="npm" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.29596412" sideWeight="0.52956635" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32833186" sideWeight="0.46356502" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="REST Client" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32863435" sideWeight="0.53643495" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Docker" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="2" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="598">
          <caret line="23" column="32" lean-forward="false" selection-start-line="23" selection-start-column="32" selection-end-line="23" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="546">
          <caret line="21" column="24" lean-forward="false" selection-start-line="21" selection-start-column="24" selection-end-line="21" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="390">
          <caret line="15" column="22" lean-forward="true" selection-start-line="15" selection-start-column="22" selection-end-line="15" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="468">
          <caret line="18" column="3" lean-forward="true" selection-start-line="18" selection-start-column="3" selection-end-line="18" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/helga.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="416">
          <caret line="16" column="14" lean-forward="false" selection-start-line="16" selection-start-column="14" selection-end-line="16" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="17" column="26" lean-forward="false" selection-start-line="17" selection-start-column="26" selection-end-line="17" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/helga.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="416">
          <caret line="16" column="14" lean-forward="false" selection-start-line="16" selection-start-column="14" selection-end-line="16" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="17" column="26" lean-forward="false" selection-start-line="17" selection-start-column="26" selection-end-line="17" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/helga.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="416">
          <caret line="16" column="14" lean-forward="true" selection-start-line="16" selection-start-column="14" selection-end-line="16" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3978">
          <caret line="153" column="5" lean-forward="false" selection-start-line="153" selection-start-column="5" selection-end-line="153" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="364">
          <caret line="14" column="23" lean-forward="false" selection-start-line="14" selection-start-column="23" selection-end-line="14" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3978">
          <caret line="153" column="5" lean-forward="false" selection-start-line="153" selection-start-column="5" selection-end-line="153" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="17" column="0" lean-forward="false" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="17" column="0" lean-forward="false" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3978">
          <caret line="153" column="5" lean-forward="false" selection-start-line="153" selection-start-column="5" selection-end-line="153" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3978">
          <caret line="153" column="5" lean-forward="false" selection-start-line="153" selection-start-column="5" selection-end-line="153" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="17" column="0" lean-forward="false" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3978">
          <caret line="153" column="5" lean-forward="true" selection-start-line="153" selection-start-column="5" selection-end-line="153" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="13" column="23" lean-forward="false" selection-start-line="13" selection-start-column="23" selection-end-line="13" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1638">
          <caret line="63" column="79" lean-forward="true" selection-start-line="63" selection-start-column="79" selection-end-line="63" selection-end-column="79" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="13" column="23" lean-forward="false" selection-start-line="13" selection-start-column="23" selection-end-line="13" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3978">
          <caret line="153" column="5" lean-forward="true" selection-start-line="153" selection-start-column="5" selection-end-line="153" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="13" column="23" lean-forward="false" selection-start-line="13" selection-start-column="23" selection-end-line="13" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1482">
          <caret line="57" column="25" lean-forward="false" selection-start-line="57" selection-start-column="25" selection-end-line="57" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1482">
          <caret line="57" column="25" lean-forward="true" selection-start-line="57" selection-start-column="25" selection-end-line="57" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/node_modules/exchange-web-service/index.js" />
    <entry file="file://$PROJECT_DIR$/functions.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="234">
          <caret line="47" column="2" lean-forward="true" selection-start-line="1" selection-start-column="0" selection-end-line="47" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/users.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="121" column="6" lean-forward="true" selection-start-line="121" selection-start-column="6" selection-end-line="121" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/rest-service.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="true" selection-start-line="0" selection-start-column="0" selection-end-line="379" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/node_modules/helga.js" />
    <entry file="jar://$APPLICATION_HOME_DIR$/plugins/JavaScriptLanguage/lib/JavaScriptLanguage.jar!/com/intellij/lang/javascript/index/predefined/DHTML.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="1450" column="19" lean-forward="true" selection-start-line="1450" selection-start-column="19" selection-end-line="1450" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tmp.json" />
    <entry file="file://$PROJECT_DIR$/alexa.js" />
    <entry file="file://$PROJECT_DIR$/helga.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="104">
          <caret line="16" column="13" lean-forward="false" selection-start-line="16" selection-start-column="13" selection-end-line="16" selection-end-column="13" />
          <folding>
            <element signature="e#64#350#0" expanded="false" />
            <element signature="e#366#2431#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/index.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="376">
          <caret line="27" column="43" lean-forward="true" selection-start-line="27" selection-start-column="43" selection-end-line="27" selection-end-column="43" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="546">
          <caret line="21" column="25" lean-forward="false" selection-start-line="21" selection-start-column="25" selection-end-line="21" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>